Jan 23rd to 29th
I have added some basic security rules to ther server and made several minor improvements to the application UI. I have done numerous research on Android Studio 
SharedViewModel class and the use of Livedata to handle communication between fragments (home and library tab) and fix major bug (1 of 2). I have also begun incorporating
SharedViewModel and Livedata into the current application subsystem.

Jan 30th to Feb 5th
I am continuing to incorporate SharedViewModel and LiveData to handle the communication bug. I have also started research into handling long string communication 
to server bug (2 of 2) with not much information on the root cause or any possible solutions. I expect to have the SharedViewModel and LiveData incorporated and validated
by next lab meeting, and if I still do not have a solution to server communication bug, I will speak to my TA or sponsor to find a possible solution or middle ground. 
Note: Server communication bug is random. Usually that specific communication to server works an estimated 95% of the time and often only occurs after not running the 
application for a certain period of time.

Feb 5th to Feb 11th
- During this week I have fixed 2 of 3 bugs. 
  - (1/3) FIXED: One of which concerned a display bug where items displayed on the "home tab" would be displayed on the library tab. 
          Engaging with this wrongly associated tab and then switching tabs using the icon buttons on the bottom could lead to major issues with the app and printer. 
  - (2/3) FIXED: The second bug was related to the app crashing when the user initiated a file upload and decided to cancel it in the file selection stage of the process. 
          Previously I mentioned this to our project sponsor Dalton Cyr with the workaround being that a pop-up menu would ask the user to confirm whether there was a 
          selectable file and whether the user wanted to continue before proceeding with the file upload procedure that way the user would have a non-crashable action 
          to take. After speaking with Dalton about this issue in the middle of 403, we agreed this would be fine which is why I haven’t mentioned it recently. 
  - (3/3) UNFIXED: I have decided to pursue a workaround solution for the bug by uploading the url in portions to Firebase and using Firebase Functions to put them back 
          together for the complete url. Through several tests, it seems the issue revolves around the length of the string. While I pursue this fix, I will continue to 
          search for a more direct or proper fix to this bug. I plan to have the workaround solution completed by the end of the following week. 
- Concerning MCU integration, my server side of the integration has been ready since 403, so I currently don’t need to make any changes. I have communicated with Abigail 
  who is in charge of the MCU side and stated to contact me if there is anything that needs to be done from my side.

Feb 12th to 18th
- Bug (3/3) above should be fixed. Since the errror is difficult to replicate after implementing the current solution, I believe the bug has been resolved. However, I am
still running tests to confirm whether or not it has been successfully handled. Note, I have performed over 60 url communications messages to the server from the 
application without error.
- Made improvements to UI for handling new fragment communication through "SharedViewModel" for fixing bug (1/3)
- Working on Start/Cancel print button to handle unallowed prints while a print is in process.
- Working on UI for a completed print.

Feb 19th to 25th
- Bug (3/3) I have performed over 200 url communication messages to the server from the application with only 3 faulty errors. I do not believe the results can be any 
better. As of right now the issue is resolved.
- Fixed Start/Cancel print button to handle unallowed prints while a print is in process.
- Continuing to implement a completed print notification.
- Working on implementing allowed and unallowed formatting option on the third tab.

Feb 26th to Mar 4th
- Added code to prevent extruder repositioning while a print is in progress, temperature and fan speeds are allowed to change
- Added code to update home tab if a print is in progress when app is first opened

Mar 5th to Mar 18th
- Added code to set home tab textfile name to "select file" when there hasn't been a file selected
- Added code to allow formatting tab to allow "0" values 
- Added code to send an in app notification when print is complete

Mar 19th to Mar 25th
- Cleaned code
- Adjusted code for formatting tab
- Implementing a delete prints

Mar 26th to Apr 1st
- Adjusted code to select only gcode files
- Adding comments to code 

Apr 2nd to Apr 8th
- Added logo
- Added Splash Screen

Apr 9th to Apr 22nd
- Took over a portion of MCU file transfer duties by parsing 100 gcode lines/instructions into a single FB node for all gcode lines within a file,
  therefore MCU does not need to open files and parse within the microcontroller
- With the above changes to file transfering, I went through and updated all interconnected aspects of the code
- Improved "print completion" process within app and server
- Added tab refresh when changes in visual displays need to reflect FB server information
- Improved incorrect file selection handling within file upload process
- When user fails to input a new name for a file, app defaults to internal file name
- Added comments and cleaned project code
